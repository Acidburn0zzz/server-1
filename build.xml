<!--
 * 
 * Hyperbox - Virtual Infrastructure Manager
 * Copyright (C) 2015 Maxime Dor
 * 
 * http://kamax.io/hbox/
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *  
-->

<project name="Hyperbox Server" default="deploy">
	
	<property file="build.properties"/>
	
	<property name="hbox.api.base.dir"										location="../api" />
	<include file="${hbox.api.base.dir}/build.xml" as="hbox.api" />
	
	<property name="hbox.server.base.dir"									location="." />
	<property name="hbox.server.dir"										location="${hbox.server.base.dir}/src" />
	<condition property="hbox.server.out.dir" value="${hbox.out.dir}">
			<isset property="hbox.out.dir" />
	</condition>
	<property name="hbox.server.out.dir"									location="${hbox.server.base.dir}/${out.dirname}" />
	<property name="hbox.server.out.build.dir"								location="${hbox.server.out.dir}/${build.dirname}" />
	<property name="hbox.server.out.build.class.dir"						location="${hbox.server.out.build.dir}/${class.dirname}" />
	<property name="hbox.server.out.build.jar.dir"							location="${hbox.server.out.build.dir}/${jar.dirname}" />
	<property name="hbox.server.out.dist.dir"								location="${hbox.server.out.dir}/${dist.dirname}" />

	<property name="hbox.server.install.win.dir"							value="C:/Program Files/Hyperbox/Server" />
	<property name="hbox.server.install.linux.dir"							value="/opt/hboxd" />
	
	<target name="clean">
		<delete dir="${hbox.server.out.dir}"/>
	</target>
	
	<target name="configure.win" if="ifWin">
		<property name="hbox.server.install.dir"							location="${hbox.server.install.win.dir}"/>
		<property name="hbox.server.out.exe"								value="hyperbox.exe"/>
	</target>
	
	<target name="configure.linux" if="ifLinux">
		<property name="hbox.server.install.dir"							location="${hbox.server.install.linux.dir}" />
	</target>
	
	<target name="configure" depends="hbox.api.configure, configure.win, configure.linux">
		<property name="hbox.server.out.bin.dir"								location="${hbox.server.out.dir}/${bin.dirname}/${platform}" />
		<property file="${hbox.server.base.dir}/tools/${platform}/build.properties" />
		
		<exec executable="git" dir="${hbox.server.base.dir}" outputProperty="hbox.server.version">
			<arg line="describe --always"/>
		</exec>
		
		<property name="hbox.server.out.dist.package"						value="${hbox.name}-${hbox.server.version}-${platform}-${server.name}" />
		
		<echo message="Hyperbox server Version:             ${hbox.server.version}" />
	</target>
	
	<target name="configure.compile" depends="configure">
		<mkdir dir="${hbox.server.out.build.class.dir}" />
	</target>
	
	<target name="configure.build" depends="configure">
		<mkdir dir="${hbox.server.out.build.jar.dir}" />
		<mkdir dir="${hbox.server.out.bin.dir}" />
	</target>
	
	<target name="configure.deploy" depends="configure">
		<mkdir dir="${hbox.server.out.bin.dir}" />
		<mkdir dir="${hbox.server.out.bin.dir}/${doc.dirname}" />
		<mkdir dir="${hbox.server.out.bin.dir}/${doc.dirname}/manual" />
		<mkdir dir="${hbox.server.out.bin.dir}/${doc.dirname}/legal" />
		<mkdir dir="${hbox.server.out.bin.dir}/${lib.dirname}" />
		<mkdir dir="${hbox.server.out.bin.dir}/${module.dirname}" />
	</target>
	
	<target name="configure.dist" depends="configure">
		<mkdir dir="${hbox.server.out.dist.dir}" />
	</target>
	
	<!-- = Server API ======================================================================================================================== -->
	
	<property name="hbox.server.api.dir"									location="${hbox.server.dir}/${api.name}" />
	<property name="hbox.server.api.src.dir"								location="${hbox.server.api.dir}/${src.dirname}" />
	<property name="hbox.server.api.lib.dir"								location="${hbox.server.api.dir}/${lib.dirname}" />
	<property name="hbox.server.api.class.dir"								location="${hbox.server.out.build.class.dir}/${server.name}-${api.name}" />
	<property name="hbox.server.api.jar.filename"							value="${hbox.name}-${server.name}-${api.name}.jar" />
	<property name="hbox.server.api.jar.file"								location="${hbox.server.out.build.jar.dir}/${hbox.server.api.jar.filename}" />
	
	<path id="hbox.server.api.classpath">
		<pathelement location="${hbox.server.api.class.dir}"/>
		<fileset dir="${hbox.server.api.lib.dir}" includes="**/*.jar"/>
		<path refid="hbox.api.classpath"/>
	</path>
	
	<target name="api.compile" depends="configure.compile">
		<mkdir dir="${hbox.server.api.class.dir}" />
		<javac source="1.6" target="1.6" debug="on" includeantruntime="false" srcdir="${hbox.server.api.src.dir}" destdir="${hbox.server.api.class.dir}" classpathref="hbox.server.api.classpath" />
	</target>
	
	<target name="api.build" depends="configure.build, api.compile">
        <jar destfile="${hbox.server.api.jar.file}">
			<fileset dir="${hbox.server.api.class.dir}" />
        </jar>
    </target>
	
	<target name="api.deploy" depends="configure.deploy, api.build">
		<copy todir="${hbox.server.out.bin.dir}/${bin.dirname}" flatten="true">
			<file file="${hbox.api.out.build.jar.file}" />
			<file file="${hbox.server.api.jar.file}" />
		</copy>
		
		<copy todir="${hbox.server.out.bin.dir}/doc/legal">
			<fileset dir="${hbox.server.base.dir}/${doc.dirname}/legal" includes="**/*" />
		</copy>
		<copy todir="${hbox.server.out.bin.dir}/doc/manual">
			<fileset dir="${hbox.server.base.dir}/${doc.dirname}/manual" includes="**/*" />
		</copy>
		
		<copy todir="${hbox.server.out.bin.dir}/${lib.dirname}" flatten="true">
			<fileset dir="${hbox.api.core.lib.dir}" includes="**/*.jar"/>
			<fileset dir="${hbox.server.api.lib.dir}" includes="**/*.jar" />
		</copy>
	</target>
	
	<!-- ===================================================================================================================================== -->
	
	<!-- = Server Core ======================================================================================================================= -->
	
	<property name="hbox.server.core.dir"									location="${hbox.server.dir}/${core.name}" />
	<property name="hbox.server.core.src.dir"								location="${hbox.server.core.dir}/${src.dirname}" />
	<property name="hbox.server.core.lib.dir"								location="${hbox.server.core.dir}/${lib.dirname}" />
	<property name="hbox.server.core.class.dir"								location="${hbox.server.out.build.class.dir}/${server.name}-${core.name}" />
	<property name="hbox.server.core.jar.filename"							value="${hbox.name}-${server.name}-${core.name}.jar" />
	<property name="hbox.server.core.jar.file"								location="${hbox.server.out.build.jar.dir}/${hbox.server.core.jar.filename}" />
	
	<path id="hbox.server.core.classpath">
		<pathelement location="${hbox.server.core.class.dir}"/>
		<fileset dir="${hbox.server.core.lib.dir}" includes="**/*.jar"/>
		<path refid="hbox.server.api.classpath"/>
	</path>
	
	<target name="core.compile" depends="api.compile">
    	<mkdir dir="${hbox.server.core.class.dir}" />
    	<javac source="1.6" target="1.6" debug="on" includeantruntime="false" srcdir="${hbox.server.core.src.dir}" destdir="${hbox.server.core.class.dir}" classpathref="hbox.server.core.classpath" />
		<echo file="${hbox.server.core.class.dir}/server.build.properties" append="false">version=${hbox.server.version}${line.separator}</echo>
    </target>
	
	<target name="core.build" depends="core.compile">
        <jar destfile="${hbox.server.core.jar.file}">
        	<fileset dir="${hbox.server.core.class.dir}" />
        </jar>
    </target>
	
	<target name="core.deploy" depends="api.deploy, core.build">
		<copy todir="${hbox.server.out.bin.dir}/${bin.dirname}" flatten="true">
			<file file="${hbox.server.core.jar.file}" />
		</copy>
		<copy todir="${hbox.server.out.bin.dir}/${lib.dirname}" flatten="true">
			<fileset dir="${hbox.api.kryo.lib.dir}" includes="**/*.jar" />
			<fileset dir="${hbox.server.core.lib.dir}" includes="**/*.jar" />
		</copy>
	</target>
	
	<!-- ===================================================================================================================================== -->
	
	<extension-point name="compile" depends="api.compile, core.compile" />
	
	<target name="build.win" if="ifWin" depends="configure.build">
		<assertDirAvailable dir="${tools.launch4j.dir}" />
		<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${tools.launch4j.dir}/launch4j.jar:${tools.launch4j.dir}/lib/xstream.jar" />
		<launch4j configFile="${hbox.server.base.dir}/scripts/launch4j/main.xml" outfile="${hbox.server.out.bin.dir}/${hbox.server.out.exe}" />
	</target>
	
	<target name="build.linux" if="ifLinux" depends="configure.build">
		<copy file="${hbox.server.base.dir}/scripts/hyperbox" tofile="${hbox.server.out.bin.dir}/hyperbox" />
		<chmod file="${hbox.server.out.bin.dir}/hyperbox" perm="a+rx" />
		<copy file="${hbox.server.base.dir}/scripts/initd/hboxd" tofile="${hbox.server.out.bin.dir}/hboxd.init" />
		<chmod file="${hbox.server.out.bin.dir}/hboxd" perm="a+rx"/>
		<copy file="${hbox.server.base.dir}/scripts/hboxd" tofile="${hbox.server.out.bin.dir}/bin/hboxd" />
		<chmod file="${hbox.server.out.bin.dir}/bin/hboxd" perm="a+rx" />
	</target>
	
	<extension-point name="build" depends="api.build, core.build, build.win, build.linux" />
	
	<extension-point name="deploy" depends="build, api.deploy, core.deploy" />
	
	<target name="dist.win" if="ifWin" depends="configure.dist, deploy">
		<echo message="NSIS Dir:           ${tools.nsis.dir}" />
		<copy file="${hbox.server.base.dir}/scripts/installer/server-installer.nsi" tofile="${hbox.server.out.build.dir}/server-installer.nsi" overwrite="true" />
		<replace file="${hbox.server.out.build.dir}/server-installer.nsi" token="@SERVER_INSTALLER_OUTPUT@" value="${hbox.server.out.dist.dir}/${hbox.server.out.dist.package}.exe" />
		<replace file="${hbox.server.out.build.dir}/server-installer.nsi" token="@SERVER_OUT_BIN_DIR@" value="${hbox.server.out.bin.dir}" />
		<replace file="${hbox.server.out.build.dir}/server-installer.nsi" token="@SERVER_INSTALL_DIR@" value="${hbox.server.install.dir}" />
		<exec executable="${tools.nsis.dir}\makensis.exe" failonerror="true">
			<arg value="/DPROJECT_NAME=Hyperbox Server" />
			<arg value="/V2"/>
			<arg value="${hbox.server.out.build.dir}/server-installer.nsi" />
		</exec>
	</target>
	
	<target name="dist.linux" if="ifLinux" depends="deploy, configure.dist">
		<copy file="${hbox.server.base.dir}/scripts/installer/server-installer.sh" tofile="${hbox.server.out.bin.dir}/server-installer.sh" overwrite="true" />
		<chmod file="${hbox.server.out.bin.dir}/server-installer.sh" perm="a+rx" />
		<exec executable="makeself" failonerror="true">
			<arg value="${hbox.server.out.bin.dir}" />
			<arg value="${hbox.server.out.dist.dir}/${hbox.server.out.dist.package}.run" />
			<arg value="Hyperbox Server" />
			<arg value="./server-installer.sh" />
		</exec>
	</target>
	
	<target name="dist.zip" depends="deploy, configure.dist">
		<zip destfile="${hbox.server.out.dist.dir}/${hbox.server.out.dist.package}.zip" basedir="${hbox.server.out.bin.dir}" />
	</target>
	
	<extension-point name="dist" depends="deploy, dist.win, dist.linux, dist.zip" />

</project>
